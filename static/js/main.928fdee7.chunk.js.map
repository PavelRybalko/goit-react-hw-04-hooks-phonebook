{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css"],"names":["module","exports","Container","children","className","s","ContactItem","contact","id","name","number","onDeleteContact","ContactList__item","ContactList__text","type","onClick","ContactList","contacts","title","map","ContactForm","onSubmit","onCheckUnique","useState","setName","setNumber","handleChange","e","currentTarget","value","console","warn","validateForm","alert","preventDefault","autoComplete","input","onChange","button","Filter","label","initialState","App","localStorageData","JSON","parse","window","localStorage","getItem","filter","setFilter","length","setContacts","useEffect","setItem","stringify","shortid","generate","state","isExistContact","find","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,oICWfC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAEH,UAAlB,SAA8BC,K,gCCWjBG,EAbK,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,GAAIC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,OAAUC,EAAlC,EAAkCA,gBAAlC,OAClB,mCACE,qBAAIP,UAAWC,IAAEO,kBAAjB,UACE,oBAAGR,UAAWC,IAAEQ,kBAAhB,UACE,+BAAOJ,IADT,MACwB,+BAAOC,OAE/B,wBAAQI,KAAK,SAASC,QAAS,kBAAMJ,EAAgBH,IAArD,0BCsBSQ,EA1BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUN,EAAb,EAAaA,gBAAb,OAClB,qCACE,oBAAIP,UAAWC,IAAEa,MAAjB,sBACA,oBAAId,UAAWC,IAAEW,YAAjB,SACGC,EAASE,KAAI,SAAAZ,GAAO,OACnB,cAAC,EAAD,CAEEA,QAASA,EACTI,gBAAiBA,GAFZJ,EAAQC,a,gBCLR,SAASY,EAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAAiB,EACvCC,mBAAS,IAD8B,mBACxDd,EADwD,KAClDe,EADkD,OAEnCD,mBAAS,IAF0B,mBAExDb,EAFwD,KAEhDe,EAFgD,KAIzDC,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,cAAlBnB,EADgB,EAChBA,KAAMoB,EADU,EACVA,MAEd,OAAQpB,GACN,IAAK,OACHe,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACEC,QAAQC,KAAR,6DAAgCtB,EAAhC,0GAeAuB,EAAe,WACnB,GAAKvB,GAASC,EAKd,OAAOY,EAAcb,GAJnBwB,MAAM,kDAOV,OACE,qCACE,oBAAI7B,UAAWC,IAAEa,MAAjB,uBACA,uBAAMd,UAAWC,IAAEe,YAAaC,SAvBf,SAAAM,GACnBA,EAAEO,iBAEsBF,MAExBX,EAASZ,EAAMC,GAEfc,EAAQ,IACRC,EAAU,MAeR,UACE,yCAEE,uBACEU,aAAa,MACb/B,UAAWC,IAAE+B,MACb3B,KAAK,OACLK,KAAK,OACLe,MAAOpB,EACP4B,SAAUX,OAGd,2CAEE,uBACES,aAAa,MACb/B,UAAWC,IAAE+B,MACb3B,KAAK,SACLK,KAAK,MACLe,MAAOnB,EACP2B,SAAUX,OAGd,wBAAQZ,KAAK,SAASV,UAAWC,IAAEiC,OAAnC,+B,qBCzDOC,EAZA,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOQ,EAAV,EAAUA,SAAV,OACb,wBAAOjC,UAAWC,IAAEmC,MAApB,mCAEE,uBAAOpC,UAAWC,IAAE+B,MAAOtB,KAAK,OAAOe,MAAOA,EAAOQ,SAAUA,QCA7DI,EAAe,CACnB,CAAEjC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAGjC,SAASgC,IACtB,IAAMC,EAAmBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,aADpC,EAEAzB,mBAAS,IAFT,mBAErB0B,EAFqB,KAEbC,EAFa,OAGI3B,oBAAS,kBACvCoB,EAAiBQ,OAASR,EAAmBF,KAJnB,mBAGrBxB,EAHqB,KAGXmC,EAHW,KAO5BC,qBAAU,WACRN,aAAaO,QAAQ,WAAYV,KAAKW,UAAUtC,MAC/C,CAACA,IAmCJ,OACE,eAAC,EAAD,WACE,cAACG,EAAD,CAAaC,SAnCE,SAACZ,EAAMC,GACxB,IAAMH,EAAU,CACdC,GAAIgD,IAAQC,WACZhD,OACAC,UAGF0C,GAAY,SAAAM,GAAK,OAAKnD,GAAL,mBAAiBmD,QA4BGpC,cAzBb,SAAAb,GACxB,IAAMkD,IAAmB1C,EAAS2C,MAAK,SAAArD,GAAO,OAAIA,EAAQE,OAASA,KAGnE,OAFAkD,GAAkB1B,MAAM,8BAEhB0B,KAsBN,cAAC,EAAD,CAAQ9B,MAAOoB,EAAQZ,SAbN,SAAAV,GAAC,OAAIuB,EAAUvB,EAAEC,cAAcC,UAchD,cAAC,EAAD,CACEZ,SAbqB,WACzB,IAAM4C,EAAmBZ,EAAOa,cAEhC,OAAO7C,EAASgC,QAAO,SAAA1C,GAAO,OAC5BA,EAAQE,KAAKqD,cAAcC,SAASF,MASxBG,GACVrD,gBAtBgB,SAAAsD,GACpBb,GAAY,SAAAc,GAAS,OACnBA,EAAUjB,QAAO,SAAA1C,GAAO,OAAIA,EAAQC,KAAOyD,cCxCjDE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3B,EAAD,MAEF4B,SAASC,eAAe,U,kBCP1BvE,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,YAAc,iCAAiC,MAAQ,2BAA2B,OAAS,8B,kBCAhJD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,YAAc,mC,kBCAnED,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,kBAAoB,0C","file":"static/js/main.928fdee7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3_9AD\",\"input\":\"Filter_input__1Vkry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__YWQNd\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact: { id, name, number }, onDeleteContact }) => (\n  <>\n    <li className={s.ContactList__item}>\n      <p className={s.ContactList__text}>\n        <span>{name}</span> : <span>{number}</span>\n      </p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  </>\n);\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <>\n    <h2 className={s.title}>Contacts</h2>\n    <ul className={s.ContactList}>\n      {contacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  </>\n);\n\nContactList.propTypes = {\n  contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      number: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\n// const INITIAL_STATE = { name: \"\", number: \"\" };\n\nexport default function ContactForm({ onSubmit, onCheckUnique }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`Тип поля name - ${name} не обрабатывается!`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isValidatedForm = validateForm();\n    if (!isValidatedForm) return;\n    onSubmit(name, number);\n\n    setName('');\n    setNumber('');\n  };\n\n  const validateForm = () => {\n    if (!name || !number) {\n      alert('Some fields are empty! Please write something');\n      return;\n    }\n\n    return onCheckUnique(name);\n  };\n\n  return (\n    <>\n      <h2 className={s.title}>Phonebook</h2>\n      <form className={s.ContactForm} onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            name=\"number\"\n            type=\"tel\"\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCheckUnique: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name:\n    <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  const localStorageData = JSON.parse(window.localStorage.getItem('contacts'));\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useState(() =>\n    localStorageData.length ? localStorageData : initialState,\n  );\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts(state => [contact, ...state]);\n  };\n\n  const handleCheckUnique = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist!');\n\n    return !isExistContact;\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const changeFilter = e => setFilter(e.currentTarget.value);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <Container>\n      <ContactForm onSubmit={addContact} onCheckUnique={handleCheckUnique} />\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__XwnMT\",\"ContactForm\":\"ContactForm_ContactForm__2g4R2\",\"input\":\"ContactForm_input__3lXYr\",\"button\":\"ContactForm_button__1zg2f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__qQwXJ\",\"ContactList\":\"ContactList_ContactList__yPQE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__item\":\"ContactItem_ContactList__item__3qjUs\",\"ContactList__text\":\"ContactItem_ContactList__text__3Na3J\"};"],"sourceRoot":""}